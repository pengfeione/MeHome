<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mehome.dao.CompanyListDao">
    <resultMap id="BaseResultMap" type="com.mehome.domain.CompanyList">
        <id column="company_id" property="companyId" jdbcType="INTEGER"/>
        <result column="register_num" property="registerNum" jdbcType="INTEGER"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="auth_code" property="authCode" jdbcType="VARCHAR"/>
        <result column="company_code" property="companyCode" jdbcType="VARCHAR"/>
        <result column="artificial_person" property="artificialPerson" jdbcType="VARCHAR"/>
        <result column="identity_code" property="identityCode" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="company_phone" property="companyPhone" jdbcType="VARCHAR"/>
        <result column="company_active" property="companyActive" jdbcType="BIT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    company_id, register_num, company_name, logo, auth_code, company_code, artificial_person, 
    identity_code, address, company_phone, company_active, update_time, position
  </sql>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from company_list
        where company_id = #{companyId,jdbcType=INTEGER}
    </select>
    <select id="listIdsByName" resultType="java.lang.String" parameterType="map">
        select
        company_id
        from company_list
        where company_name LIKE  concat('%','${name}','%')
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
    delete from company_list
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.mehome.domain.CompanyList">
    insert into company_list (company_id, register_num, company_name, 
      logo, auth_code, company_code, 
      artificial_person, identity_code, address, 
      company_phone, company_active, update_time, 
      position)
    values (#{companyId,jdbcType=INTEGER}, #{registerNum,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, 
      #{logo,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, 
      #{artificialPerson,jdbcType=VARCHAR}, #{identityCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{companyPhone,jdbcType=VARCHAR}, #{companyActive,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{position,jdbcType=VARCHAR})
  </insert>
    <insert id="insertRequired" parameterType="com.mehome.domain.CompanyList">
        insert into company_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                company_id,
            </if>
            <if test="registerNum != null">
                register_num,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
            <if test="logo != null">
                logo,
            </if>
            <if test="authCode != null">
                auth_code,
            </if>
            <if test="companyCode != null">
                company_code,
            </if>
            <if test="artificialPerson != null">
                artificial_person,
            </if>
            <if test="identityCode != null">
                identity_code,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="companyPhone != null">
                company_phone,
            </if>
            <if test="companyActive != null">
                company_active,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="position != null">
                position,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="registerNum != null">
                #{registerNum,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                #{logo,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                #{authCode,jdbcType=VARCHAR},
            </if>
            <if test="companyCode != null">
                #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="artificialPerson != null">
                #{artificialPerson,jdbcType=VARCHAR},
            </if>
            <if test="identityCode != null">
                #{identityCode,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="companyPhone != null">
                #{companyPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyActive != null">
                #{companyActive,jdbcType=BIT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateRequired" parameterType="com.mehome.domain.CompanyList">
        update company_list
        <set>
            <if test="registerNum != null">
                register_num = #{registerNum,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                auth_code = #{authCode,jdbcType=VARCHAR},
            </if>
            <if test="companyCode != null">
                company_code = #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="artificialPerson != null">
                artificial_person = #{artificialPerson,jdbcType=VARCHAR},
            </if>
            <if test="identityCode != null">
                identity_code = #{identityCode,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="companyPhone != null">
                company_phone = #{companyPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyActive != null">
                company_active = #{companyActive,jdbcType=BIT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
        </set>
        where company_id = #{companyId,jdbcType=INTEGER}
    </update>
    <update id="update" parameterType="com.mehome.domain.CompanyList">
    update company_list
    set register_num = #{registerNum,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      artificial_person = #{artificialPerson,jdbcType=VARCHAR},
      identity_code = #{identityCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      company_active = #{companyActive,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      position = #{position,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
</mapper>